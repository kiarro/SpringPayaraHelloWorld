[{"D:\\S\\cloud\\SpringPayaraHelloWorld\\frontend\\src\\index.js":"1","D:\\S\\cloud\\SpringPayaraHelloWorld\\frontend\\src\\reportWebVitals.js":"2","D:\\S\\cloud\\SpringPayaraHelloWorld\\frontend\\src\\App.js":"3","D:\\S\\cloud\\SpringPayaraHelloWorld\\frontend\\src\\views\\HomePage\\HomePage.js":"4","D:\\S\\cloud\\SpringPayaraHelloWorld\\frontend\\src\\components\\Buttons\\HeaderButton.js":"5","D:\\S\\cloud\\SpringPayaraHelloWorld\\frontend\\src\\views\\AddDragon\\AddDragon.js":"6","D:\\S\\cloud\\SpringPayaraHelloWorld\\frontend\\src\\views\\ReturnCount\\ReturnCount.js":"7","D:\\S\\cloud\\SpringPayaraHelloWorld\\frontend\\src\\views\\ReturnArray\\ReturnArray.js":"8","D:\\S\\cloud\\SpringPayaraHelloWorld\\frontend\\src\\components\\Tables\\DragonBase.js":"9","D:\\S\\cloud\\SpringPayaraHelloWorld\\frontend\\src\\components\\Inputs\\BaseInput.js":"10","D:\\S\\cloud\\SpringPayaraHelloWorld\\frontend\\src\\components\\Inputs\\Select.js":"11"},{"size":552,"mtime":1655821382139,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1655821382176,"results":"14","hashOfConfig":"13"},{"size":1842,"mtime":1666693774267,"results":"15","hashOfConfig":"13"},{"size":9405,"mtime":1666796280386,"results":"16","hashOfConfig":"13"},{"size":202,"mtime":1655821382009,"results":"17","hashOfConfig":"13"},{"size":3303,"mtime":1666693774434,"results":"18","hashOfConfig":"13"},{"size":1262,"mtime":1666693774501,"results":"19","hashOfConfig":"13"},{"size":3354,"mtime":1666693774466,"results":"20","hashOfConfig":"13"},{"size":1777,"mtime":1666860981879,"results":"21","hashOfConfig":"13"},{"size":375,"mtime":1666693774293,"results":"22","hashOfConfig":"13"},{"size":532,"mtime":1666693774300,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"8x7kh2",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\S\\cloud\\SpringPayaraHelloWorld\\frontend\\src\\index.js",[],[],[],"D:\\S\\cloud\\SpringPayaraHelloWorld\\frontend\\src\\reportWebVitals.js",[],[],"D:\\S\\cloud\\SpringPayaraHelloWorld\\frontend\\src\\App.js",["62","63"],[],"import './App.css';\r\nimport dragon from './dragon.png'\r\nimport React from 'react';\r\nimport HeaderButton from './components/Buttons/HeaderButton';\r\nimport AddDragon from './views/AddDragon/AddDragon';\r\nimport ReturnCount from './views/ReturnCount/ReturnCount';\r\nimport HomePage from './views/HomePage/HomePage';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  Link,\r\n  useLocation,\r\n  useParams,\r\n} from 'react-router-dom';\r\nimport ReturnArray from './views/ReturnArray/ReturnArray';\r\n\r\nfunction BackButton() {\r\n  let location = useLocation();\r\n  // console.log(location);\r\n\r\n  return (\r\n    <nav className='ButtonContainerLeft' hidden={location.pathname==\"/\"}>\r\n      <Link to=\"\"><HeaderButton name=\"Назад\" /></Link>\r\n    </nav>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"Body\">\r\n        <Router>\r\n          <header className=\"App-header\">\r\n            <BackButton/>\r\n            <div className='App-logo'><Link to=\"/\"><img src={dragon} className=\"App-logo\" alt=\"logo\" /></Link></div>\r\n            <nav className='ButtonContainer'>\r\n              <Link to=\"adddragon\"><HeaderButton name=\"Добавить дракона\" /></Link>\r\n            </nav>\r\n          </header>\r\n          <Routes>\r\n            <Route path='' element={<HomePage />} />\r\n            <Route path='adddragon' element={<AddDragon />} />\r\n            <Route path='charactermore' element={<ReturnCount type=\"характер которых больше\" param=\"character\" />} />\r\n            <Route path='typeless' element={<ReturnCount type=\"тип которых меньше\" param=\"type\" />} />\r\n            <Route path='namestarts' element={<ReturnArray namesubstring=\"Мераксес\" />} />\r\n          </Routes>\r\n        </Router>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","D:\\S\\cloud\\SpringPayaraHelloWorld\\frontend\\src\\views\\HomePage\\HomePage.js",["64","65","66","67","68","69","70","71","72","73","74","75","76","77"],[],"D:\\S\\cloud\\SpringPayaraHelloWorld\\frontend\\src\\components\\Buttons\\HeaderButton.js",[],[],"D:\\S\\cloud\\SpringPayaraHelloWorld\\frontend\\src\\views\\AddDragon\\AddDragon.js",["78","79"],[],"import React from 'react';\r\nimport './AddDragon.css';\r\nimport HeaderButton from './../../components/Buttons/HeaderButton';\r\nimport BaseInput from './../../components/Inputs/BaseInput';\r\nimport Select from './../../components/Inputs/Select';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  useEffect,\r\n  useState\r\n} from 'react'\r\n\r\nfunction AddDragon() {\r\n  const history = useNavigate();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [age, setAge] = useState(\"\");\r\n  const [weight, setWeight] = useState(\"\");\r\n  const [character, setCharacter] = useState(\"CUNNING\");\r\n  const [type, setType] = useState(\"WATER\");\r\n  const [x, setX] = useState(\"\");\r\n  const [y, setY] = useState(\"\");\r\n  const [depth, setDepth] = useState(\"\");\r\n  const [numberOfTreasures, setNumberOfTreasures] = useState(\"\");\r\n\r\n  function sendClick() {\r\n    try {\r\n      var body = {\r\n        name: name,\r\n        coordinates: {\r\n          x: parseFloat(x),\r\n          y: parseFloat(y)\r\n        },\r\n        age: parseInt(age),\r\n        weight: parseInt(weight),\r\n        type: type,\r\n        character: character,\r\n        cave: {\r\n          depth: parseFloat(depth),\r\n          numberOfTreasures: parseFloat(numberOfTreasures)\r\n        }\r\n      };\r\n\r\n      fetch('/dragonscaves', {\r\n        method: 'POST',\r\n        body: JSON.stringify(body),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      history(\"/\");\r\n    } catch (err) {\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"form\">\r\n        <div className='InputConteiner'>\r\n          <BaseInput name=\"Имя\" value={name} onChange={(e) => setName(e.target.value)} />\r\n        </div>\r\n        <div className='InputConteiner'>\r\n          <BaseInput name=\"Возраст\" value={age} onChange={(e) => setAge(e.target.value)} />\r\n        </div>\r\n        <div className='InputConteiner'>\r\n          <BaseInput name=\"Вес\" value={weight} onChange={(e) => setWeight(e.target.value)} />\r\n        </div>\r\n        <div className='InputConteiner'>\r\n          <Select name=\"Характер\" value={character} onChange={(e) => setCharacter(e.target.value)} options={[\"CUNNING\", \"WISE\", \"CHAOTIC\", \"CHAOTIC_EVIL\", \"FICKLE\"]}></Select>\r\n        </div>\r\n        <div className='InputConteiner'>\r\n        <Select name=\"Тип\" value={type} onChange={(e) => setType(e.target.value)} options={[\"WATER\", \"UNDERGROUND\", \"AIR\", \"FIRE\"]}></Select>\r\n        </div>\r\n        <div className='InputConteiner'>\r\n          <BaseInput name=\"Х\" value={x} onChange={(e) => setX(e.target.value)} />\r\n        </div>\r\n        <div className='InputConteiner'>\r\n          <BaseInput name=\"У\" value={y} onChange={(e) => setY(e.target.value)} />\r\n        </div>\r\n        <div className='InputConteiner'>\r\n          <BaseInput name=\"Глубина пещеры\" value={depth} onChange={(e) => setDepth(e.target.value)} />\r\n        </div>\r\n        <div className='InputConteiner'>\r\n          <BaseInput name=\"Количество сокровищ\" value={numberOfTreasures} onChange={(e) => setNumberOfTreasures(e.target.value)} />\r\n        </div>\r\n        <button className=\"HeaderButton\" onClick={sendClick} >Добавить дракона</button>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default AddDragon;","D:\\S\\cloud\\SpringPayaraHelloWorld\\frontend\\src\\views\\ReturnCount\\ReturnCount.js",["80","81","82","83","84"],[],"import './ReturnCount.css'\r\nimport React from 'react';\r\nimport { useNavigate, useSearchParams, useLocation } from 'react-router-dom';\r\n\r\nimport {\r\n    useEffect,\r\n    useState\r\n  } from 'react'\r\n\r\nfunction ReturnCount(props)\r\n{\r\n    let location = useLocation();\r\n    console.log(location);\r\n\r\n    const param = {};\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    param[\"type\"] = searchParams.get(\"type\");\r\n    param[\"character\"] = searchParams.get(\"character\");\r\n\r\n    useEffect(() => {\r\n        fetch(\"/dragonscaves\"+location.pathname+\"?\"+props.param+\"=\"+param[props.param])\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              setIsLoaded(true);\r\n              setCount(result.value);\r\n            },\r\n            (error) => {\r\n              setIsLoaded(true);\r\n              setError(error);\r\n            }\r\n          )\r\n      }, [])\r\n\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [count, setCount] = useState(0);\r\n\r\n    return(\r\n    <main>\r\n        <div className='Center'>Количество драконов, {props.type} {param[props.param]} равно: {count}</div>\r\n    </main>\r\n    );\r\n}\r\n\r\nexport default ReturnCount;","D:\\S\\cloud\\SpringPayaraHelloWorld\\frontend\\src\\views\\ReturnArray\\ReturnArray.js",["85","86","87","88","89","90","91"],[],"import React from 'react';\r\nimport './ReturnArray.css';\r\nimport filterFactory, { textFilter,selectFilter, numberFilter, Comparator } from 'react-bootstrap-table2-filter';\r\nimport DragonBase from './../../components/Tables/DragonBase';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\n\r\nimport {\r\n  useEffect,\r\n  useState\r\n} from 'react'\r\n\r\nconst selectTypes = {\r\n  WATER: 'WATER',\r\n  UNDERGROUND:'UNDERGROUND',\r\n  AIR:'AIR',\r\n  FIRE:'FIRE'\r\n};\r\n\r\nconst selectCharacters = {\r\n  CUNNING: 'CUNNING',\r\n  WISE: 'WISE',\r\n  CHAOTIC: 'CHAOTIC',\r\n  CHAOTIC_EVIL: 'CHAOTIC_EVIL',\r\n  FICKLE: 'FICKLE'\r\n};\r\n\r\nconst headers = [{\r\n  dataField: 'id',\r\n  text:'ID',\r\n  sort: true,\r\n  filter: numberFilter(\r\n    {\r\n    placeholder: 'Введите id'\r\n    }\r\n  )},{\r\n  dataField:'name',\r\n  text:'ИМЯ',\r\n  sort: true,\r\n  filter: textFilter({\r\n    placeholder: 'Введите имя',  // custom the input placeholder\r\n    //style: { backgroundColor: '#6b63b5' },\r\n    className: 'my-custom-text-filter' // custom classname on input\r\n    \r\n  })\r\n},{\r\n  dataField:'age',\r\n  text:'ВОЗРАСТ',\r\n  sort: true,\r\n  filter: numberFilter(\r\n    {\r\n      placeholder: 'Введите возраст'\r\n    }\r\n  )},{\r\n  dataField:'weight',\r\n  text:'ВЕС',\r\n  sort: true,\r\n  filter: numberFilter(\r\n    {\r\n      style: { weight: 10 },\r\n      placeholder: 'Введите вес'\r\n    }\r\n  )},{\r\n  dataField:'character',\r\n  text:'ХАРАКТЕР',\r\n  sort: true,\r\n  filter: selectFilter({\r\n    options: selectCharacters,\r\n    placeholder: 'Выберите характер'\r\n  })},{\r\n  dataField:'type',\r\n  text:'ТИП',\r\n  sort: true,\r\n  filter: selectFilter({\r\n    options: selectTypes,\r\n    placeholder: 'Выберите тип'\r\n  })},{\r\n  dataField:'coordinates.x',\r\n  text:'Х',\r\n  sort: true,\r\n  filter: numberFilter(\r\n    {\r\n      placeholder: 'Введите Х'\r\n    }\r\n  )},{\r\n  dataField:'coordinates.y',\r\n  text:'У',\r\n  sort: true,\r\n  filter: numberFilter(\r\n    {\r\n      placeholder: 'Введите У'\r\n    }\r\n  )},{\r\n  dataField:'cave.depth',\r\n  text:'ГЛУБИНА ПЕЩЕРЫ',\r\n  sort: true,\r\n  filter: numberFilter(\r\n    {\r\n      placeholder: 'Введите глубину пещеры'\r\n    }\r\n  )},{\r\n  dataField:'cave.numberOfTreasures',\r\n  text:'КОЛИЧЕСТВО СОКРОВИЩ',\r\n  sort: true,\r\n  filter: numberFilter(\r\n    {\r\n      placeholder: 'Введите количество сокровищ'\r\n    }\r\n  )}\r\n];\r\n\r\nfunction ReturnArray(props)\r\n{\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const name = searchParams.get(\"name\");\r\n\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [dragons, setDragons] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/dragonscaves/namestarts?name=\"+name)\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          setIsLoaded(true);\r\n          setDragons(result);\r\n        },\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      )\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n    {/* <header><h1>Массив драконов {name}:</h1></header> */}\r\n    <main>\r\n    <DragonBase rows={dragons} headers={headers} rowHeaders page=\"1 из я хуй знает скольки\" />\r\n    </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReturnArray;","D:\\S\\cloud\\SpringPayaraHelloWorld\\frontend\\src\\components\\Tables\\DragonBase.js",["92"],[],"D:\\S\\cloud\\SpringPayaraHelloWorld\\frontend\\src\\components\\Inputs\\BaseInput.js",[],[],"D:\\S\\cloud\\SpringPayaraHelloWorld\\frontend\\src\\components\\Inputs\\Select.js",[],[],{"ruleId":"93","severity":1,"message":"94","line":14,"column":3,"nodeType":"95","messageId":"96","endLine":14,"endColumn":12},{"ruleId":"97","severity":1,"message":"98","line":23,"column":67,"nodeType":"99","messageId":"100","endLine":23,"endColumn":69},{"ruleId":"93","severity":1,"message":"101","line":8,"column":8,"nodeType":"95","messageId":"96","endLine":8,"endColumn":21},{"ruleId":"93","severity":1,"message":"102","line":8,"column":64,"nodeType":"95","messageId":"96","endLine":8,"endColumn":74},{"ruleId":"93","severity":1,"message":"103","line":10,"column":20,"nodeType":"95","messageId":"96","endLine":10,"endColumn":26},{"ruleId":"93","severity":1,"message":"104","line":11,"column":3,"nodeType":"95","messageId":"96","endLine":11,"endColumn":9},{"ruleId":"93","severity":1,"message":"105","line":12,"column":3,"nodeType":"95","messageId":"96","endLine":12,"endColumn":8},{"ruleId":"93","severity":1,"message":"106","line":14,"column":3,"nodeType":"95","messageId":"96","endLine":14,"endColumn":16},{"ruleId":"93","severity":1,"message":"94","line":15,"column":3,"nodeType":"95","messageId":"96","endLine":15,"endColumn":12},{"ruleId":"93","severity":1,"message":"107","line":19,"column":3,"nodeType":"95","messageId":"96","endLine":19,"endColumn":12},{"ruleId":"93","severity":1,"message":"108","line":159,"column":10,"nodeType":"95","messageId":"96","endLine":159,"endColumn":15},{"ruleId":"93","severity":1,"message":"109","line":159,"column":17,"nodeType":"95","messageId":"96","endLine":159,"endColumn":25},{"ruleId":"93","severity":1,"message":"110","line":160,"column":10,"nodeType":"95","messageId":"96","endLine":160,"endColumn":18},{"ruleId":"93","severity":1,"message":"111","line":160,"column":20,"nodeType":"95","messageId":"96","endLine":160,"endColumn":31},{"ruleId":"93","severity":1,"message":"112","line":161,"column":10,"nodeType":"95","messageId":"96","endLine":161,"endColumn":17},{"ruleId":"93","severity":1,"message":"113","line":161,"column":19,"nodeType":"95","messageId":"96","endLine":161,"endColumn":29},{"ruleId":"93","severity":1,"message":"114","line":3,"column":8,"nodeType":"95","messageId":"96","endLine":3,"endColumn":20},{"ruleId":"93","severity":1,"message":"107","line":9,"column":3,"nodeType":"95","messageId":"96","endLine":9,"endColumn":12},{"ruleId":"93","severity":1,"message":"115","line":3,"column":10,"nodeType":"95","messageId":"96","endLine":3,"endColumn":21},{"ruleId":"93","severity":1,"message":"116","line":16,"column":26,"nodeType":"95","messageId":"96","endLine":16,"endColumn":41},{"ruleId":"117","severity":1,"message":"118","line":33,"column":10,"nodeType":"119","endLine":33,"endColumn":12,"suggestions":"120"},{"ruleId":"93","severity":1,"message":"108","line":35,"column":12,"nodeType":"95","messageId":"96","endLine":35,"endColumn":17},{"ruleId":"93","severity":1,"message":"110","line":36,"column":12,"nodeType":"95","messageId":"96","endLine":36,"endColumn":20},{"ruleId":"93","severity":1,"message":"101","line":3,"column":8,"nodeType":"95","messageId":"96","endLine":3,"endColumn":21},{"ruleId":"93","severity":1,"message":"102","line":3,"column":64,"nodeType":"95","messageId":"96","endLine":3,"endColumn":74},{"ruleId":"93","severity":1,"message":"115","line":5,"column":10,"nodeType":"95","messageId":"96","endLine":5,"endColumn":21},{"ruleId":"93","severity":1,"message":"116","line":113,"column":24,"nodeType":"95","messageId":"96","endLine":113,"endColumn":39},{"ruleId":"93","severity":1,"message":"108","line":116,"column":10,"nodeType":"95","messageId":"96","endLine":116,"endColumn":15},{"ruleId":"93","severity":1,"message":"110","line":117,"column":10,"nodeType":"95","messageId":"96","endLine":117,"endColumn":18},{"ruleId":"117","severity":1,"message":"121","line":133,"column":6,"nodeType":"119","endLine":133,"endColumn":8,"suggestions":"122"},{"ruleId":"93","severity":1,"message":"123","line":6,"column":25,"nodeType":"95","messageId":"96","endLine":6,"endColumn":35},"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'filterFactory' is defined but never used.","'Comparator' is defined but never used.","'Router' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'useRouteMatch' is defined but never used.","'useEffect' is defined but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'isLoaded' is assigned a value but never used.","'setIsLoaded' is assigned a value but never used.","'dragons' is assigned a value but never used.","'setDragons' is assigned a value but never used.","'HeaderButton' is defined but never used.","'useNavigate' is defined but never used.","'setSearchParams' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'location.pathname', 'param', and 'props.param'. Either include them or remove the dependency array.","ArrayExpression",["124"],"React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.",["125"],"'textFilter' is defined but never used.",{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},"Update the dependencies array to be: [location.pathname, param, props.param]",{"range":"130","text":"131"},"Update the dependencies array to be: [name]",{"range":"132","text":"133"},[898,900],"[location.pathname, param, props.param]",[2872,2874],"[name]"]